{"version":3,"sources":["0","store/index.js","App.js","viewer/sky.js","viewer/viewer.js","index.js"],"names":["store","defaultState","menuIsOpen","project","name","path","environment","selectedObject","scene","rootStore","state","action","type","Object","assign","object","toggleMenu","dispatch","updateScene","updateSelectedObject","App","console","log","props","Component","mapStateToProps","menu","mapDispatchToProps","open","Sky","vertexShader","uniforms","topColor","value","THREE","Color","bottomColor","offset","exponent","skyGeo","SphereBufferGeometry","skyMat","ShaderMaterial","fragmentShader","side","BackSide","sky","Mesh","OrbitControls","require","OBJLoader","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","lookAt","Vector3","canvas","document","getElementById","renderer","WebGLRenderer","antialias","setSize","setClearColor","setPixelRatio","devicePixelRatio","interactiveObjects","Group","add","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","y","controls","getObject","gridHelper","GridHelper","INTERSECTED","INTERSECTED_box","INTERSECTED_selected","raycaster","Raycaster","mouse","Vector2","onMouseMove","event","x","clientX","domElement","clientWidth","clientY","clientHeight","onMouseDown","button","getState","remove","BoxHelper","animate","requestAnimationFrame","setFromCamera","intersects","intersectObjects","children","length","update","render","addEventListener","loader","load","xhr","loaded","total","error","module","hot","accept","focus","remote","Menu","MenuItem","template","label","submenu","role"],"mappings":"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","file":"src.cac41acd.map","sourceRoot":"../../src","sourcesContent":[null,"/* ------------\n\n--------------- */\n\nlet defaultState = {\n    menuIsOpen: true,\n    project: {\n        name: null,\n        path: null\n    },\n    environment: {\n        selectedObject: null,\n        scene: null\n    }\n}\n\nlet rootStore = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'TOGGLE_MENU':\n            let menuIsOpen = !state.menuIsOpen;\n            return Object.assign({}, state, { menuIsOpen });\n\n        case 'UPDATE_SCENE':\n            var environment = Object.assign({}, state.environment, { scene: action.scene });\n            return Object.assign({}, state, { environment });\n\n        case 'UPDATE_SELECTED_OBJECT':\n            var environment = Object.assign({}, state.environment, { selectedObject: action.object });\n            return Object.assign({}, state, { environment });\n        default:\n            return state\n    }\n}\n\nimport { createStore } from \"redux\";\nlet store = createStore(rootStore);\n\n\n/*actions*/\nexport let toggleMenu = () => {\n    store.dispatch({ type: 'TOGGLE_MENU' });\n}\n\nexport let updateScene = (scene) => {\n    store.dispatch({ type: 'UPDATE_SCENE', scene });\n}\n\nexport let updateSelectedObject = (object) => {\n    store.dispatch({ type: 'UPDATE_SELECTED_OBJECT', object });\n}\n//export the store at the end\nexport default store;","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\nimport logo from \"./icons/logo.svg\";\nimport github from \"./icons/github.svg\";\nimport { shell } from 'electron';\n\nimport \"./app.css\";\nimport { connect } from 'react-redux';\nimport { toggleMenu } from \"./store\";\n\n//import Menu from \"./components/Menu\";\n\nclass App extends Component {\n    /*\n    onClick = () => {\n        toggleMenu();\n    }*/\n\n    render() {\n        console.log('props', this.props);\n        return (\n            <div >\n                \n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { menu: state.menuIsOpen }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleMenu: () => {\n            dispatch({ type: 'TOGGLE_MENU', open: null });\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App)\n\n","import * as THREE from 'three';\n\nexport default class Sky {\n\n    getObject() {\n    \n        // SKYDOME\n        var vertexShader = `\n        varying vec3 vWorldPosition;\n\t\t\tvoid main() {\n\t\t\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\t\t\t\tvWorldPosition = worldPosition.xyz;\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n            }\n            `;\n        var fragmentShader = `\n        uniform vec3 topColor;\n\t\t\tuniform vec3 bottomColor;\n\t\t\tuniform float offset;\n\t\t\tuniform float exponent;\n\t\t\tvarying vec3 vWorldPosition;\n\t\t\tvoid main() {\n\t\t\t\tfloat h = normalize( vWorldPosition + offset ).y;\n\t\t\t\tgl_FragColor = vec4( mix( bottomColor, topColor, max( pow( max( h, 0.0 ), exponent ), 0.0 ) ), 1.0 );\n            }\n            `;\n        var uniforms = {\n            topColor: { type: \"c\", value: new THREE.Color(0x606060) },\n            bottomColor: { type: \"c\", value: new THREE.Color(0x212121) },\n            offset: { type: \"f\", value: 400 },\n            exponent: { type: \"f\", value: 1.0 }\n        };\n\n        var skyGeo = new THREE.SphereBufferGeometry(1000, 32, 15);\n\n        var skyMat = new THREE.ShaderMaterial({\n            uniforms: uniforms,\n            vertexShader: vertexShader,\n            fragmentShader: fragmentShader,\n            side: THREE.BackSide\n        });\n\n        var sky = new THREE.Mesh(skyGeo, skyMat);\n        return sky;\n    }\n}","import * as THREE from 'three';\n\nimport Sky from \"./sky\";\nimport store, { toggleMenu, updateScene, updateSelectedObject } from \"../store\";\n\nvar OrbitControls = require('three-orbit-controls')(THREE)\n\nvar OBJLoader = require('three-obj-loader');\nOBJLoader(THREE);\n\nvar scene = new THREE.Scene();\nvar camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 10000);\ncamera.position.set(0, 10, -30)\ncamera.lookAt(new THREE.Vector3());\nvar canvas = document.getElementById(\"3d-env\");\nvar renderer = new THREE.WebGLRenderer({ canvas: canvas, antialias: true });\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.setClearColor(0x000000, 0.0);\nrenderer.setPixelRatio( window.devicePixelRatio );\n\n/* --- for ambiente occlusions\ncomposer = new THREE.EffectComposer( renderer );\n\t\t\t\trenderPass = new THREE.RenderPass( scene, camera );\n\t\t\t\tcomposer.addPass( renderPass );\n\t\t\t\tsaoPass = new THREE.SAOPass( scene, camera, false, true );\n\t\t\t\tsaoPass.renderToScreen = true;\n\t\t\t\tcomposer.addPass( saoPass );\n*/\n\nvar interactiveObjects = new THREE.Group();\nscene.add(interactiveObjects);\n\nvar geometry = new THREE.BoxGeometry(10, 10, 10);\nvar material = new THREE.MeshBasicMaterial({ color: 0x000000 });\nvar cube = new THREE.Mesh(geometry, material);\ncube.name = \"cube1\";\ninteractiveObjects.add(cube);\n\nvar geometry = new THREE.BoxGeometry(5, 5, 5);\nvar material = new THREE.MeshBasicMaterial({ color: 0x00ffFF });\nvar cube = new THREE.Mesh(geometry, material);\ncube.position.y = 7.5;\ncube.name = \"cube2\";\ninteractiveObjects.add(cube);\n\nvar geometry = new THREE.BoxGeometry(5, 5, 5);\nvar material = new THREE.MeshBasicMaterial({ color: 0x00ffFF });\nvar cube = new THREE.Mesh(geometry, material);\ncube.position.y = 15;\ncube.name = \"cube3\";\ninteractiveObjects.add(cube);\n\n//scene.add(cube);\n\nvar controls = new OrbitControls(camera);\nlet sky = new Sky();\n\nscene.add(sky.getObject(THREE));\n\nvar gridHelper = new THREE.GridHelper(100, 100, 0xaaaaaa, 0x666666);\nscene.add(gridHelper);\n\n//raycast\nvar raycaster = new THREE.Raycaster();\nvar mouse = new THREE.Vector2();\nvar INTERSECTED;\nvar INTERSECTED_box;\nvar INTERSECTED_selected;\n\nfunction onMouseMove(event) {\n    mouse.x = (event.clientX / renderer.domElement.clientWidth) * 2 - 1;\n    mouse.y = - (event.clientY / renderer.domElement.clientHeight) * 2 + 1;\n}\n\nfunction onMouseDown(event) {\n    if (INTERSECTED && event.button == 2) {\n        console.log(event);\n        console.log(INTERSECTED.name);\n    }\n    if (INTERSECTED && event.button == 0) {\n        updateSelectedObject(INTERSECTED);\n        console.log(store.getState().environment);\n        console.log(INTERSECTED.name);\n\n        INTERSECTED_selected = INTERSECTED;\n\n        if (INTERSECTED_box)\n            scene.remove(INTERSECTED_box)\n        INTERSECTED_box = new THREE.BoxHelper(INTERSECTED, 0x55ddff);\n\n        scene.add(INTERSECTED_box);\n    }\n}\n\nwindow.addEventListener('mousemove', onMouseMove, false);\nwindow.addEventListener('mousedown', onMouseDown, false);\n\nfunction animate() {\n    requestAnimationFrame(animate);\n    // update the picking ray with the camera and mouse position\n    raycaster.setFromCamera(mouse, camera);\n\n    // calculate objects intersecting the picking ray\n    var intersects = raycaster.intersectObjects(interactiveObjects.children);\n\n    // if there is one (or more) intersections\n    if (intersects.length) {\n        if (intersects[0].object != INTERSECTED) {\n            INTERSECTED = intersects[0].object;\n            if (INTERSECTED) {\n                //INTERSECTED.currentHex = INTERSECTED.material.color.getHex();\n                //INTERSECTED.material.color.setHex(0xffff00);\n            }\n            else\n                INTERSECTED = null;\n        }\n    }\n    else {\n        if (INTERSECTED)\n            INTERSECTED = null;\n    }\n\n    if (INTERSECTED_box) {\n        INTERSECTED_box.update();\n    }\n\n    renderer.render(scene, camera);\n}\n\n//load obj\n// instantiate a loader\nvar loader = new THREE.OBJLoader();\n\n// load a resource\nloader.load(\n    // resource URL\n    'models/monster.obj',\n    // called when resource is loaded\n    function (object) {\n\n        scene.add(object);\n\n    },\n    // called when loading is in progresses\n    function (xhr) {\n\n        console.log((xhr.loaded / xhr.total * 100) + '% loaded');\n\n    },\n    // called when loading has errors\n    function (error) {\n\n        console.log('An error happened');\n\n    }\n);\n\nanimate();\n","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App.js\";\nimport \"./index.css\";\n\n\n//export let actions = new Actions(store);\nimport store from \"./store\";\n\nconst render = () => {\n    ReactDOM.render(\n        <AppContainer>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </AppContainer>,\n        window.document.getElementById('app'));\n}\nif (typeof window !== 'undefined') { render(); }\n\nif (module.hot) {\n    module.hot.accept(render);\n}\n\nwindow.focus();\n\n//execute the viewer\nimport './viewer/viewer.js';\n//let viewer = new Viewer(store);\n\n//Menu\nconst { remote } = require('electron');\nconst { Menu, MenuItem } = remote\n/*\nconst menu = new Menu()\nmenu.append(new MenuItem({ label: 'MenuItem1', click() { console.log('item 1 clicked') } }))\nmenu.append(new MenuItem({ type: 'separator' }))\nmenu.append(new MenuItem({ label: 'MenuItem2', type: 'checkbox', checked: true }))\n\nwindow.addEventListener('contextmenu', (e) => {\n    e.preventDefault()\n    menu.popup({ window: remote.getCurrentWindow() })\n}, false);\n\n*/\n\nconst template = [\n    {\n        label: 'Edit',\n        submenu: [\n            { role: 'undo' },\n            { role: 'redo' },\n            { type: 'separator' },\n            { role: 'cut' },\n            { role: 'copy' },\n            { role: 'paste' },\n            { role: 'pasteandmatchstyle' },\n            { role: 'delete' },\n            { role: 'selectall' }\n        ]\n    }];\n\n//const menuTop = Menu.buildFromTemplate(template);\n//Menu.setApplicationMenu(menuTop);\n\n"]}