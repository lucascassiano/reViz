{"version":3,"sources":["0","store/index.js","components/Menu.js","App.js","viewer/sky.js","viewer/viewer.js","index.js"],"names":["store","defaultState","rootStore","state","action","type","menuIsOpen","environment","scene","toggleMenu","dispatch","updateScene","Menu","menuClass","props","open","Classes","DARK","Component","App","onClick","log","menu","mapStateToProps","mapDispatchToProps","Sky","THREE","vertexShader","uniforms","value","Color","skyGeo","SphereBufferGeometry","skyMat","ShaderMaterial","fragmentShader","BackSide","sky","Mesh","animate","OrbitControls","require","OBJLoader","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","lookAt","Vector3","canvas","document","getElementById","renderer","WebGLRenderer","setSize","setClearColor","interactiveObjects","Group","add","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","name","y","controls","getObject","gridHelper","GridHelper","INTERSECTED","INTERSECTED_box","raycaster","Raycaster","mouse","Vector2","onMouseMove","event","x","clientX","domElement","clientWidth","clientY","clientHeight","onMouseDown","button","remove","BoxHelper","setFromCamera","intersects","intersectObjects","children","length","object","render","addEventListener","module","hot","accept"],"mappings":"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","file":"src.2ce6c5d0.map","sourceRoot":"../../src","sourcesContent":[null,"/* ------------\n\n--------------- */\n\nlet defaultState = {\n    menuIsOpen: true,\n    project: {\n        name: null,\n        path: null\n    },\n    environment: {\n        selectedObject: null,\n        scene: null\n    }\n}\n\nlet rootStore = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'TOGGLE_MENU':\n            let menuIsOpen = !state.menuIsOpen;\n            return Object.assign({}, state, { menuIsOpen });\n\n        case 'UPDATE_SCENE':\n            let environment = Object.assign(state.environment, { scene: action.scene });\n            return Object.assign({}, state, { environment });\n\n        default:\n            return state\n    }\n}\n\nimport { createStore } from \"redux\";\nlet store = createStore(rootStore);\n\n\n\n/*actions*/\nexport let toggleMenu = () => {\n    store.dispatch({ type: 'TOGGLE_MENU' });\n}\n\nexport let updateScene = (scene) => {\n    store.dispatch({ type: 'UPDATE_SCENE', scene });\n}\n\n//export the store at the end\nexport default store;","import React, { Component } from 'react';\nimport { Button, Card, Classes, Elevation, H5, Label, Slider, Switch, Tab, TabId, Tabs, Icon, ContextMenu, ContextMenuTarget } from \"@blueprintjs/core\";\nimport { toggleMenu } from \"../store\";\n\nexport default class Menu extends Component {\n    render() {\n        let menuClass = this.props.open ? \"menu\" : \"menu-hidden\";\n\n        return <div>\n            <Icon\n                icon=\"caret-right\"\n                className={this.props.open ? \"menu-caret-open\" : \"menu-caret-closed\"}\n                onClick={toggleMenu}\n                iconSize={20}\n            />\n\n            <div className={menuClass}>\n                <Card className={Classes.DARK + \" content\"}>\n                    < Tabs className=\"tabs\">\n                        <Tab id=\"rx\" title=\"Objects\" panel={<div>hiiii</div>} />\n                        <Tab id=\"ng\" title=\"Data\" panel={<div>Angular</div>} />\n                        <Tab id=\"mb\" title=\"Project\" panel={<div>hiiii</div>} />\n                        <Tabs />\n                    </Tabs>\n                </Card>\n            </div>\n        </div>\n\n\n    }\n\n\n}","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\nimport logo from \"./icons/logo.svg\";\nimport github from \"./icons/github.svg\";\nimport { shell } from 'electron';\n\nimport \"./app.css\";\nimport { connect } from 'react-redux';\nimport { toggleMenu } from \"./store\";\n\nimport Menu from \"./components/Menu\";\n\nclass App extends Component {\n\n    onClick = () => {\n        toggleMenu();\n\n    }\n\n    render() {\n        console.log('props', this.props);\n        return (\n            <div >\n                <Menu open={this.props.menu} />\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { menu: state.menuIsOpen }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleMenu: () => {\n            dispatch({ type: 'TOGGLE_MENU', open: null });\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App)\n\n","import * as THREE from 'three';\n\nexport default class Sky {\n    \n    getObject() {\n        // SKYDOME\n        var vertexShader = `\n        varying vec3 vWorldPosition;\n\t\t\tvoid main() {\n\t\t\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\t\t\t\tvWorldPosition = worldPosition.xyz;\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n            }\n            `;\n        var fragmentShader = `\n        uniform vec3 topColor;\n\t\t\tuniform vec3 bottomColor;\n\t\t\tuniform float offset;\n\t\t\tuniform float exponent;\n\t\t\tvarying vec3 vWorldPosition;\n\t\t\tvoid main() {\n\t\t\t\tfloat h = normalize( vWorldPosition + offset ).y;\n\t\t\t\tgl_FragColor = vec4( mix( bottomColor, topColor, max( pow( max( h, 0.0 ), exponent ), 0.0 ) ), 1.0 );\n            }\n            `;\n        var uniforms = {\n            topColor: { type: \"c\", value: new THREE.Color(0x606060) },\n            bottomColor: { type: \"c\", value: new THREE.Color(0x212121) },\n            offset: { type: \"f\", value: 400 },\n            exponent: { type: \"f\", value: 1.0 }\n        };\n\n        var skyGeo = new THREE.SphereBufferGeometry(1000, 32, 15);\n\n        var skyMat = new THREE.ShaderMaterial({\n            uniforms: uniforms,\n            vertexShader: vertexShader,\n            fragmentShader: fragmentShader,\n            side: THREE.BackSide\n        });\n\n        var sky = new THREE.Mesh(skyGeo, skyMat);\n        return sky;\n    }\n}","import * as THREE from 'three';\n\nimport Sky from \"./sky\";\nimport store, { toggleMenu, updateScene } from \"../store\";\n\nvar OrbitControls = require('three-orbit-controls')(THREE)\n\nvar OBJLoader = require('three-obj-loader');\nOBJLoader(THREE);\n\nvar scene = new THREE.Scene();\nvar camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 10000);\ncamera.position.set(0, 10, -30)\ncamera.lookAt(new THREE.Vector3());\nvar canvas = document.getElementById(\"3d-env\");\nvar renderer = new THREE.WebGLRenderer({ canvas: canvas });\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.setClearColor(0x000000, 0.0);\n\nvar interactiveObjects = new THREE.Group();\nscene.add(interactiveObjects);\n\nvar geometry = new THREE.BoxGeometry(10, 10, 10);\nvar material = new THREE.MeshBasicMaterial({ color: 0x000000 });\nvar cube = new THREE.Mesh(geometry, material);\ncube.name = \"cube\";\ninteractiveObjects.add(cube);\n\nvar geometry = new THREE.BoxGeometry(5, 5, 5);\nvar material = new THREE.MeshBasicMaterial({ color: 0x00ffFF });\nvar cube = new THREE.Mesh(geometry, material);\ncube.position.y = 7.5;\ninteractiveObjects.add(cube);\n\nvar geometry = new THREE.BoxGeometry(5, 5, 5);\nvar material = new THREE.MeshBasicMaterial({ color: 0x00ffFF });\nvar cube = new THREE.Mesh(geometry, material);\ncube.position.y = 15;\ninteractiveObjects.add(cube);\n\n//scene.add(cube);\n\nvar controls = new OrbitControls(camera);\nlet sky = new Sky();\n\nscene.add(sky.getObject(THREE));\n\nvar gridHelper = new THREE.GridHelper(100, 10, 0x44aaff, 0x808080);\nscene.add(gridHelper);\n\n//raycast\nvar raycaster = new THREE.Raycaster();\nvar mouse = new THREE.Vector2();\nvar INTERSECTED;\nvar INTERSECTED_box;\n\nfunction onMouseMove(event) {\n    mouse.x = (event.clientX / renderer.domElement.clientWidth) * 2 - 1;\n    mouse.y = - (event.clientY / renderer.domElement.clientHeight) * 2 + 1;\n}\n\nfunction onMouseDown(event) {\n    if (INTERSECTED && event.button == 2) {\n        console.log(event);\n        console.log(INTERSECTED.name);\n    }\n    if (INTERSECTED && event.button == 0) {\n        if (INTERSECTED_box)\n            scene.remove(INTERSECTED_box)\n        INTERSECTED_box = new THREE.BoxHelper(INTERSECTED, 0x55ddff);\n\n        scene.add(INTERSECTED_box);\n    }\n}\nwindow.addEventListener('mousemove', onMouseMove, false);\nwindow.addEventListener('mousedown', onMouseDown, false);\n\nfunction animate() {\n    requestAnimationFrame(animate);\n    // update the picking ray with the camera and mouse position\n    raycaster.setFromCamera(mouse, camera);\n\n    // calculate objects intersecting the picking ray\n    var intersects = raycaster.intersectObjects(interactiveObjects.children);\n\n    // if there is one (or more) intersections\n    if (intersects.length) {\n        if (intersects[0].object != INTERSECTED) {\n            INTERSECTED = intersects[0].object;\n            if (INTERSECTED) {\n                //INTERSECTED.currentHex = INTERSECTED.material.color.getHex();\n                //INTERSECTED.material.color.setHex(0xffff00);\n            }\n            else\n                INTERSECTED = null;\n        }\n    }\n    else {\n        // if (INTERSECTED)\n        //   INTERSECTED.material.color.setHex(0x00aa00);\n        INTERSECTED = null;\n    }\n\n    renderer.render(scene, camera);\n}\n\ncanvas.addEventListener('mousedown', () => {\n    toggleMenu();\n})\n\nanimate();\n","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App.js\";\nimport \"./index.css\";\n\n\n//export let actions = new Actions(store);\nimport store from \"./store\";\n\nconst render = () => {\n    ReactDOM.render(\n        <AppContainer>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </AppContainer>,\n        window.document.getElementById('app'));\n}\nif (typeof window !== 'undefined') { render(); }\n\nif (module.hot) {\n    module.hot.accept(render);\n}\n\n//execute the viewer\nimport './viewer/viewer.js';\n//let viewer = new Viewer(store);\n\n\n\n"]}