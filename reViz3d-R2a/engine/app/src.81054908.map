{"version":3,"sources":["0","store/index.js","components/Menu.js","App.js","viewer/sky.js","viewer/viewer.js","index.js"],"names":["store","defaultState","menuIsOpen","project","name","path","environment","selectedObject","scene","rootStore","state","action","type","Object","assign","object","toggleMenu","dispatch","updateScene","updateSelectedObject","ObjectsMenu","value","props","position","x","y","z","rotation","xChange","yChange","zChange","rxChange","ryChange","rzChange","Component","Menu","menuClass","open","console","log","Classes","DARK","mapStateToProps","menu","mapDispatchToProps","App","Sky","vertexShader","uniforms","topColor","THREE","Color","bottomColor","offset","exponent","skyGeo","SphereBufferGeometry","skyMat","ShaderMaterial","fragmentShader","side","BackSide","sky","Mesh","OrbitControls","require","OBJLoader","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","set","lookAt","Vector3","canvas","document","getElementById","renderer","WebGLRenderer","setSize","setClearColor","interactiveObjects","Group","add","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","controls","getObject","gridHelper","GridHelper","INTERSECTED","INTERSECTED_box","INTERSECTED_selected","raycaster","Raycaster","mouse","Vector2","onMouseMove","event","clientX","domElement","clientWidth","clientY","clientHeight","onMouseDown","button","getState","remove","BoxHelper","animate","requestAnimationFrame","setFromCamera","intersects","intersectObjects","children","length","update","render","addEventListener","loader","load","xhr","loaded","total","error","module","hot","accept","focus"],"mappings":"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","file":"src.81054908.map","sourceRoot":"../../src","sourcesContent":[null,"/* ------------\n\n--------------- */\n\nlet defaultState = {\n    menuIsOpen: true,\n    project: {\n        name: null,\n        path: null\n    },\n    environment: {\n        selectedObject: null,\n        scene: null\n    }\n}\n\nlet rootStore = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'TOGGLE_MENU':\n            let menuIsOpen = !state.menuIsOpen;\n            return Object.assign({}, state, { menuIsOpen });\n\n        case 'UPDATE_SCENE':\n            var environment = Object.assign({}, state.environment, { scene: action.scene });\n            return Object.assign({}, state, { environment });\n\n        case 'UPDATE_SELECTED_OBJECT':\n            var environment = Object.assign({}, state.environment, { selectedObject: action.object });\n            return Object.assign({}, state, { environment });\n        default:\n            return state\n    }\n}\n\nimport { createStore } from \"redux\";\nlet store = createStore(rootStore);\n\n\n/*actions*/\nexport let toggleMenu = () => {\n    store.dispatch({ type: 'TOGGLE_MENU' });\n}\n\nexport let updateScene = (scene) => {\n    store.dispatch({ type: 'UPDATE_SCENE', scene });\n}\n\nexport let updateSelectedObject = (object) => {\n    store.dispatch({ type: 'UPDATE_SELECTED_OBJECT', object });\n}\n//export the store at the end\nexport default store;","import React, { Component } from 'react';\nimport { Button, Card, Classes, Elevation, H5, Label, Slider, Switch, Tab, TabId, Tabs, Icon, ContextMenu, ContextMenuTarget, NumericInput, ControlGroup, InputGroup } from \"@blueprintjs/core\";\nimport { toggleMenu } from \"../store\";\nimport { connect } from \"react-redux\";\n\nclass ObjectsMenu extends Component {\n    xChange = (value) => {\n        let { object } = this.props;\n        object.position.x = value;\n    }\n\n    yChange = (value) => {\n        let { object } = this.props;\n        object.position.y = value;\n    }\n\n    zChange = (value) => {\n        let { object } = this.props;\n        object.position.z = value;\n    }\n\n    rxChange = (value) => {\n        let { object } = this.props;\n        object.rotation.x = value;\n    }\n\n    ryChange = (value) => {\n        let { object } = this.props;\n        object.rotation.y = value;\n    }\n\n    rzChange = (value) => {\n        let { object } = this.props;\n        object.rotation.z = value;\n    }\n\n    render() {\n        let { object } = this.props;\n\n        let name = object ? object.name : null;\n        let position = object ? object.position : { x: 0, y: 0, z: 0 };\n        let rotation = object ? object.rotation : { x: 0, y: 0, z: 0 };\n\n\n        return (\n            <div className=\"menu-object\">\n                <h2>{name}</h2>\n                position\n                <div className=\"menu-position\">\n\n                    <div className=\"menu-position-cell\">\n                        x\n                        <NumericInput fill={true} value={position ? position.x : 0} onValueChange={this.xChange} />\n                    </div>\n                    <div className=\"menu-position-cell\">\n                        y\n                        <NumericInput fill={true} value={position ? position.y : 0} onValueChange={this.yChange} />\n                    </div>\n                    <div className=\"menu-position-cell\">\n                        z\n                        <NumericInput fill={true} value={position ? position.z : 0} onValueChange={this.zChange} />\n                    </div>\n                </div>\n\n                rotation\n                <div className=\"menu-position\">\n\n                    <div className=\"menu-position-cell\">\n                        x\n                        <NumericInput fill={true} value={rotation ? rotation.x : 0} onValueChange={this.rxChange} />\n                    </div>\n                    <div className=\"menu-position-cell\">\n                        y\n                        <NumericInput fill={true} value={rotation ? rotation.y : 0} onValueChange={this.ryChange} />\n                    </div>\n                    <div className=\"menu-position-cell\">\n                        z\n                        <NumericInput fill={true} value={rotation ? rotation.z : 0} onValueChange={this.rzChange} />\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nclass Menu extends Component {\n    render() {\n        let menuClass = this.props.open ? \"menu\" : \"menu-hidden\";\n        let environment = this.props.environment;\n\n        console.log(\"env\", environment);\n\n        let selectedObject = \"select a object...\";\n        if (environment.selectedObject)\n            selectedObject = this.props.environment.selectedObject;\n\n        return <div>\n            <Icon\n                icon=\"caret-right\"\n                className={this.props.open ? \"menu-caret-open\" : \"menu-caret-closed\"}\n                onClick={toggleMenu}\n                iconSize={20}\n            />\n\n            <div className={menuClass}>\n                <Card className={Classes.DARK + \" content\"}>\n                    < Tabs className=\"tabs\">\n                        <Tab id=\"rx\" title=\"Objects\" panel={<ObjectsMenu object={selectedObject} />} />\n                        <Tab id=\"ng\" title=\"Data\" panel={<div>Angular</div>} />\n                        <Tab id=\"mb\" title=\"Project\" panel={<div>hiiii</div>} />\n                        <Tabs />\n                    </Tabs>\n                </Card>\n            </div>\n        </div>\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        menu: state.menuIsOpen,\n        environment: state.environment\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleMenu: () => {\n            dispatch({ type: 'TOGGLE_MENU', open: null });\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Menu)\n","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\nimport logo from \"./icons/logo.svg\";\nimport github from \"./icons/github.svg\";\nimport { shell } from 'electron';\n\nimport \"./app.css\";\nimport { connect } from 'react-redux';\nimport { toggleMenu } from \"./store\";\n\nimport Menu from \"./components/Menu\";\n\nclass App extends Component {\n    /*\n    onClick = () => {\n        toggleMenu();\n    }*/\n\n    render() {\n        console.log('props', this.props);\n        return (\n            <div >\n                <Menu open={this.props.menu} />\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { menu: state.menuIsOpen }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleMenu: () => {\n            dispatch({ type: 'TOGGLE_MENU', open: null });\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App)\n\n","import * as THREE from 'three';\n\nexport default class Sky {\n    \n    getObject() {\n        // SKYDOME\n        var vertexShader = `\n        varying vec3 vWorldPosition;\n\t\t\tvoid main() {\n\t\t\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\t\t\t\tvWorldPosition = worldPosition.xyz;\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n            }\n            `;\n        var fragmentShader = `\n        uniform vec3 topColor;\n\t\t\tuniform vec3 bottomColor;\n\t\t\tuniform float offset;\n\t\t\tuniform float exponent;\n\t\t\tvarying vec3 vWorldPosition;\n\t\t\tvoid main() {\n\t\t\t\tfloat h = normalize( vWorldPosition + offset ).y;\n\t\t\t\tgl_FragColor = vec4( mix( bottomColor, topColor, max( pow( max( h, 0.0 ), exponent ), 0.0 ) ), 1.0 );\n            }\n            `;\n        var uniforms = {\n            topColor: { type: \"c\", value: new THREE.Color(0x606060) },\n            bottomColor: { type: \"c\", value: new THREE.Color(0x212121) },\n            offset: { type: \"f\", value: 400 },\n            exponent: { type: \"f\", value: 1.0 }\n        };\n\n        var skyGeo = new THREE.SphereBufferGeometry(1000, 32, 15);\n\n        var skyMat = new THREE.ShaderMaterial({\n            uniforms: uniforms,\n            vertexShader: vertexShader,\n            fragmentShader: fragmentShader,\n            side: THREE.BackSide\n        });\n\n        var sky = new THREE.Mesh(skyGeo, skyMat);\n        return sky;\n    }\n}","import * as THREE from 'three';\n\nimport Sky from \"./sky\";\nimport store, { toggleMenu, updateScene, updateSelectedObject } from \"../store\";\n\nvar OrbitControls = require('three-orbit-controls')(THREE)\n\nvar OBJLoader = require('three-obj-loader');\nOBJLoader(THREE);\n\nvar scene = new THREE.Scene();\nvar camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 10000);\ncamera.position.set(0, 10, -30)\ncamera.lookAt(new THREE.Vector3());\nvar canvas = document.getElementById(\"3d-env\");\nvar renderer = new THREE.WebGLRenderer({ canvas: canvas });\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.setClearColor(0x000000, 0.0);\n\nvar interactiveObjects = new THREE.Group();\nscene.add(interactiveObjects);\n\nvar geometry = new THREE.BoxGeometry(10, 10, 10);\nvar material = new THREE.MeshBasicMaterial({ color: 0x000000 });\nvar cube = new THREE.Mesh(geometry, material);\ncube.name = \"cube1\";\ninteractiveObjects.add(cube);\n\nvar geometry = new THREE.BoxGeometry(5, 5, 5);\nvar material = new THREE.MeshBasicMaterial({ color: 0x00ffFF });\nvar cube = new THREE.Mesh(geometry, material);\ncube.position.y = 7.5;\ncube.name = \"cube2\";\ninteractiveObjects.add(cube);\n\nvar geometry = new THREE.BoxGeometry(5, 5, 5);\nvar material = new THREE.MeshBasicMaterial({ color: 0x00ffFF });\nvar cube = new THREE.Mesh(geometry, material);\ncube.position.y = 15;\ncube.name = \"cube3\";\ninteractiveObjects.add(cube);\n\n//scene.add(cube);\n\nvar controls = new OrbitControls(camera);\nlet sky = new Sky();\n\nscene.add(sky.getObject(THREE));\n\nvar gridHelper = new THREE.GridHelper(100, 10, 0xaaaaaa, 0x666666);\nscene.add(gridHelper);\n\n//raycast\nvar raycaster = new THREE.Raycaster();\nvar mouse = new THREE.Vector2();\nvar INTERSECTED;\nvar INTERSECTED_box;\nvar INTERSECTED_selected;\n\nfunction onMouseMove(event) {\n    mouse.x = (event.clientX / renderer.domElement.clientWidth) * 2 - 1;\n    mouse.y = - (event.clientY / renderer.domElement.clientHeight) * 2 + 1;\n}\n\nfunction onMouseDown(event) {\n    if (INTERSECTED && event.button == 2) {\n        console.log(event);\n        console.log(INTERSECTED.name);\n    }\n    if (INTERSECTED && event.button == 0) {\n        updateSelectedObject(INTERSECTED);\n        console.log(store.getState().environment);\n        console.log(INTERSECTED.name);\n\n        INTERSECTED_selected = INTERSECTED;\n\n        if (INTERSECTED_box)\n            scene.remove(INTERSECTED_box)\n        INTERSECTED_box = new THREE.BoxHelper(INTERSECTED, 0x55ddff);\n\n        scene.add(INTERSECTED_box);\n    }\n}\n\nwindow.addEventListener('mousemove', onMouseMove, false);\nwindow.addEventListener('mousedown', onMouseDown, false);\n\nfunction animate() {\n    requestAnimationFrame(animate);\n    // update the picking ray with the camera and mouse position\n    raycaster.setFromCamera(mouse, camera);\n\n    // calculate objects intersecting the picking ray\n    var intersects = raycaster.intersectObjects(interactiveObjects.children);\n\n    // if there is one (or more) intersections\n    if (intersects.length) {\n        if (intersects[0].object != INTERSECTED) {\n            INTERSECTED = intersects[0].object;\n            if (INTERSECTED) {\n                //INTERSECTED.currentHex = INTERSECTED.material.color.getHex();\n                //INTERSECTED.material.color.setHex(0xffff00);\n            }\n            else\n                INTERSECTED = null;\n        }\n    }\n    else {\n        if (INTERSECTED)\n            INTERSECTED = null;\n    }\n\n    if (INTERSECTED_box) {\n        INTERSECTED_box.update();\n    }\n\n    renderer.render(scene, camera);\n}\n\n//load obj\n// instantiate a loader\nvar loader = new THREE.OBJLoader();\n\n// load a resource\nloader.load(\n    // resource URL\n    'models/monster.obj',\n    // called when resource is loaded\n    function (object) {\n\n        scene.add(object);\n\n    },\n    // called when loading is in progresses\n    function (xhr) {\n\n        console.log((xhr.loaded / xhr.total * 100) + '% loaded');\n\n    },\n    // called when loading has errors\n    function (error) {\n\n        console.log('An error happened');\n\n    }\n);\n\nanimate();\n","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App.js\";\nimport \"./index.css\";\n\n\n//export let actions = new Actions(store);\nimport store from \"./store\";\n\nconst render = () => {\n    ReactDOM.render(\n        <AppContainer>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </AppContainer>,\n        window.document.getElementById('app'));\n}\nif (typeof window !== 'undefined') { render(); }\n\nif (module.hot) {\n    module.hot.accept(render);\n}\n\nwindow.focus();\n\n//execute the viewer\nimport './viewer/viewer.js';\n//let viewer = new Viewer(store);\n\n\n\n"]}