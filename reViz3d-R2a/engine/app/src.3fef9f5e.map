{"version":3,"sources":["0","store/index.js","App.js","viewer/sky.js","viewer/utils/OrbitControls.js","viewer/viewerHelper.js","viewer/viewer.js","index.js"],"names":["store","defaultState","menuIsOpen","project","name","path","environment","selectedObject","scene","rootStore","state","action","type","Object","assign","object","toggleMenu","dispatch","updateScene","updateSelectedObject","App","console","log","props","Component","mapStateToProps","menu","mapDispatchToProps","open","Sky","vertexShader","uniforms","topColor","value","THREE","Color","bottomColor","offset","exponent","skyGeo","SphereBufferGeometry","skyMat","ShaderMaterial","fragmentShader","side","BackSide","sky","Mesh","module","exports","require","OrbitControls","domElement","updateExternal","undefined","document","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ORBIT","MOUSE","ZOOM","MIDDLE","PAN","target0","clone","position0","position","zoom0","zoom","isExternallyControlled","setExternalControl","scope","v","quat","quatInverse","lastPosition","lastQuaternion","changeEvent","startEvent","endEvent","STATE","NONE","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","spherical","Spherical","sphericalDelta","scale","panOffset","zoomChanged","theta","phi","getAngles","getPolarAngle","getAzimuthalAngle","setPolarAngle","angle","forceUpdate","setAzimuthalAngle","setPolarAngleNoForcing","update","setAzimuthalAngleNoForcing","setSyncRotationObject","syncObject","syncRotation","setAngles","updateControls","_phi","_theta","rotateLeft","rotateUp","setPhiDelta","setThetaDelta","panLeft","distance","te","matrix","elements","set","multiplyScalar","add","panUp","pan","deltaX","deltaY","screenWidth","screenHeight","PerspectiveCamera","targetDistance","sub","length","tan","fov","OrthographicCamera","right","left","top","bottom","warn","dollyIn","dollyScale","max","min","updateProjectionMatrix","dollyOut","reset","copy","dispatchEvent","Quaternion","setFromUnitVectors","up","inverse","applyQuaternion","radius","x","sin","y","cos","z","lookAt","distanceToSquared","dot","quaternion","setFromVector3","makeSafe","setFromSpherical","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","objectMatrix","setFromMatrixColumn","element","body","clientHeight","clientWidth","event","preventDefault","button","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","addEventListener","handleMouseMoveRotate","subVectors","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","handleMouseWheel","handleKeyDown","keyCode","touches","handleTouchStartRotate","pageX","pageY","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","prototype","create","EventDispatcher","constructor","defineProperties","center","get","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","viewerHelper","_canvas_id","_controls","canvas","getElementById","externalControls","Scene","camera","offsetWidth","offsetHeight","renderer","WebGLRenderer","antialias","alpha","setSize","setClearColor","setPixelRatio","window","devicePixelRatio","controls","cubeScale","geometry","BoxGeometry","material","MeshBasicMaterial","color","CylinderGeometry","cylinder","animate","bind","requestAnimationFrame","render","OBJLoader","innerWidth","innerHeight","preserveDrawingBuffer","failIfMajorPerformanceCaveat","interactiveObjects","Group","cube","getObject","ViewerHelper","gridHelper","GridHelper","INTERSECTED","INTERSECTED_box","INTERSECTED_selected","raycaster","Raycaster","mouse","getState","remove","BoxHelper","setFromCamera","intersects","intersectObjects","children","loader","hot","accept","focus","remote","Menu","MenuItem","append","label","click","checked","e","popup","getCurrentWindow"],"mappings":"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","file":"src.3fef9f5e.map","sourceRoot":"../../src","sourcesContent":[null,"/* ------------\n\n--------------- */\n\nlet defaultState = {\n    menuIsOpen: true,\n    project: {\n        name: null,\n        path: null\n    },\n    environment: {\n        selectedObject: null,\n        scene: null\n    }\n}\n\nlet rootStore = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'TOGGLE_MENU':\n            let menuIsOpen = !state.menuIsOpen;\n            return Object.assign({}, state, { menuIsOpen });\n\n        case 'UPDATE_SCENE':\n            var environment = Object.assign({}, state.environment, { scene: action.scene });\n            return Object.assign({}, state, { environment });\n\n        case 'UPDATE_SELECTED_OBJECT':\n            var environment = Object.assign({}, state.environment, { selectedObject: action.object });\n            return Object.assign({}, state, { environment });\n        default:\n            return state\n    }\n}\n\nimport { createStore } from \"redux\";\nlet store = createStore(rootStore);\n\n\n/*actions*/\nexport let toggleMenu = () => {\n    store.dispatch({ type: 'TOGGLE_MENU' });\n}\n\nexport let updateScene = (scene) => {\n    store.dispatch({ type: 'UPDATE_SCENE', scene });\n}\n\nexport let updateSelectedObject = (object) => {\n    store.dispatch({ type: 'UPDATE_SELECTED_OBJECT', object });\n}\n//export the store at the end\nexport default store;","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\nimport logo from \"./icons/logo.svg\";\nimport github from \"./icons/github.svg\";\nimport { shell } from 'electron';\n\nimport \"./app.css\";\nimport { connect } from 'react-redux';\nimport { toggleMenu } from \"./store\";\n\n//import Menu from \"./components/Menu\";\n\nclass App extends Component {\n    /*\n    onClick = () => {\n        toggleMenu();\n    }*/\n\n    render() {\n        console.log('props', this.props);\n        return (\n            <div >\n                \n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { menu: state.menuIsOpen }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleMenu: () => {\n            dispatch({ type: 'TOGGLE_MENU', open: null });\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App)\n\n","import * as THREE from 'three';\n\nexport default class Sky {\n\n    getObject() {\n    \n        // SKYDOME\n        var vertexShader = `\n        varying vec3 vWorldPosition;\n\t\t\tvoid main() {\n\t\t\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\t\t\t\tvWorldPosition = worldPosition.xyz;\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n            }\n            `;\n        var fragmentShader = `\n        uniform vec3 topColor;\n\t\t\tuniform vec3 bottomColor;\n\t\t\tuniform float offset;\n\t\t\tuniform float exponent;\n\t\t\tvarying vec3 vWorldPosition;\n\t\t\tvoid main() {\n\t\t\t\tfloat h = normalize( vWorldPosition + offset ).y;\n\t\t\t\tgl_FragColor = vec4( mix( bottomColor, topColor, max( pow( max( h, 0.0 ), exponent ), 0.0 ) ), 1.0 );\n            }\n            `;\n        var uniforms = {\n            topColor: { type: \"c\", value: new THREE.Color(0x606060) },\n            bottomColor: { type: \"c\", value: new THREE.Color(0x212121) },\n            offset: { type: \"f\", value: 400 },\n            exponent: { type: \"f\", value: 1.0 }\n        };\n\n        var skyGeo = new THREE.SphereBufferGeometry(1000, 32, 15);\n\n        var skyMat = new THREE.ShaderMaterial({\n            uniforms: uniforms,\n            vertexShader: vertexShader,\n            fragmentShader: fragmentShader,\n            side: THREE.BackSide\n        });\n\n        var sky = new THREE.Mesh(skyGeo, skyMat);\n        return sky;\n    }\n}","module.exports = function () {\n    /**\n     * @author qiao / https://github.com/qiao\n     * @author mrdoob / http://mrdoob.com\n     * @author alteredq / http://alteredqualia.com/\n     * @author WestLangley / http://github.com/WestLangley\n     * @author erich666 / http://erichaines.com\n     * @author lucascassiano / http://github.com/lucascassiano\n     */\n\n    // This set of controls performs orbiting, dollying (zooming), and panning.\n    // Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by\n    // default).\n    //\n    //    Orbit - left mouse / touch: one finger move    Zoom - middle mouse, or\n    // mousewheel / touch: two finger spread or squish    Pan - right mouse, or\n    // arrow keys / touch: three finter swipe\n\n    /* -- last edit comments\n    this script was changed to support better gets and sets of angles\n    */\n    const THREE = require(\"three\");\n\n    function OrbitControls(object, domElement, updateExternal) {\n\n        this.object = object;\n\n        this.domElement = (domElement !== undefined) ?\n            domElement :\n            document;\n\n        // Set to false to disable this control\n        this.enabled = true;\n\n        // \"target\" sets the location of focus, where the object orbits around\n        this.target = new THREE.Vector3();\n\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0;\n        this.maxDistance = Infinity;\n\n        // How far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0;\n        this.maxZoom = Infinity;\n\n        // How far you can orbit vertically, upper and lower limits. Range is 0 to\n        // Math.PI radians.\n        this.minPolarAngle = 0; // radians\n        this.maxPolarAngle = Math.PI; // radians\n\n        // How far you can orbit horizontally, upper and lower limits. If set, must be a\n        // sub-interval of the interval [ - Math.PI, Math.PI ].\n        this.minAzimuthAngle = -Infinity; // radians\n        this.maxAzimuthAngle = Infinity; // radians\n\n        // Set to true to enable damping (inertia) If damping is enabled, you must call\n        // controls.update() in your animation loop\n        this.enableDamping = false;\n        this.dampingFactor = 0.25;\n\n        // This option actually enables dollying in and out; left as \"zoom\" for\n        // backwards compatibility. Set to false to disable zooming\n        this.enableZoom = true;\n        this.zoomSpeed = 1.0;\n\n        // Set to false to disable rotating\n        this.enableRotate = true;\n        this.rotateSpeed = 1.0;\n\n        // Set to false to disable panning\n        this.enablePan = true;\n        this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target If auto-rotate is\n        // enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false;\n        this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n        // Set to false to disable use of the keys\n        this.enableKeys = true;\n\n        // The four arrow keys\n        this.keys = {\n            LEFT: 37,\n            UP: 38,\n            RIGHT: 39,\n            BOTTOM: 40\n        };\n\n        // Mouse buttons\n        this.mouseButtons = {\n            ORBIT: THREE.MOUSE.LEFT,\n            ZOOM: THREE.MOUSE.MIDDLE,\n            PAN: THREE.MOUSE.RIGHT\n        };\n\n        // for reset\n        this.target0 = this\n            .target\n            .clone();\n        this.position0 = this\n            .object\n            .position\n            .clone();\n        this.zoom0 = this.object.zoom;\n\n        this.updateExternal = updateExternal;\n        this.isExternallyControlled = false;\n\n        this.setExternalControl = function (value = false) {\n            this.isExternallyControlled = value;\n        }\n        //\n        // internals\n        //\n\n        var scope = this;\n\n        var changeEvent = {\n            type: 'change'\n        };\n        var startEvent = {\n            type: 'start'\n        };\n        var endEvent = {\n            type: 'end'\n        };\n\n        var STATE = {\n            NONE: -1,\n            ROTATE: 0,\n            DOLLY: 1,\n            PAN: 2,\n            TOUCH_ROTATE: 3,\n            TOUCH_DOLLY: 4,\n            TOUCH_PAN: 5\n        };\n\n        var state = STATE.NONE;\n\n        var EPS = 0.000001;\n\n        // current position in spherical coordinates\n        var spherical = new THREE.Spherical();\n        var sphericalDelta = new THREE.Spherical();\n\n        var scale = 1;\n        var panOffset = new THREE.Vector3();\n        var zoomChanged = false;\n\n        // Current position in spherical coordinate system.\n        var theta = 0;\n        var phi = 0;\n\n        // Pending changes\n        var phiDelta = 0;\n        var thetaDelta = 0;\n        var scale = 1;\n        var panOffset = new THREE.Vector3();\n        var zoomChanged = false;\n        //---\n        //\n        // public methods\n        //\n\n        this.getAngles = function () {\n            return { phi: spherical.phi, theta: spherical.theta };\n        }\n        \n        this.getPolarAngle = function () {\n            return spherical.phi;\n        };\n\n        this.getAzimuthalAngle = function () {\n            return spherical.theta;\n        };\n\n        this.setPolarAngle = function (angle) {\n            phi = angle;\n            this.forceUpdate();\n        };\n\n        this.setAzimuthalAngle = function (angle) {\n            theta = angle;\n            this.forceUpdate();\n        };\n\n        this.setPolarAngleNoForcing = function (angle) {\n            phi = angle;\n            this.update();\n            //this.forceUpdate();\n        };\n\n        this.setAzimuthalAngleNoForcing = function (angle) {\n            theta = angle;\n            this.update();\n            //this.forceUpdate();\n        };\n\n        this.setSyncRotationObject = function (syncObject) {\n            this.syncObject;\n            if (this.syncObject.syncRotation) {\n                this.syncObject.syncRotation(this.setAngles);\n            }\n        }\n\n        /**\n         * update Orbit Controls\n         * @param {*} force \n         */\n        this.updateControls = function (force = false) {\n            if (force)\n                this.forceUpdate();\n            else\n                this.update();\n        }\n\n        this.setAngles = function (_phi, _theta) {\n            phi = _phi;\n            theta = _theta;\n            this.forceUpdate();\n        }\n\n        this.rotateLeft = function (angle) {\n\n            thetaDelta -= angle;\n        };\n\n        this.rotateUp = function (angle) {\n\n            phiDelta = angle;\n\n        };\n\n        this.setPhiDelta = function (angle) {\n            phiDelta = angle;\n            //this.forceUpdate();\n        };\n\n        this.setThetaDelta = function (angle) {\n            thetaDelta -= angle;\n            //this.forceUpdate();\n        };\n\n        // pass in distance in world space to move left\n        this.panLeft = function () {\n\n            var v = new THREE.Vector3();\n\n            return function panLeft(distance) {\n\n                var te = this.object.matrix.elements;\n\n                // get X column of matrix\n                v.set(te[0], te[1], te[2]);\n                v.multiplyScalar(-distance);\n\n                panOffset.add(v);\n\n            };\n\n        }();\n\n        // pass in distance in world space to move up\n        this.panUp = function () {\n\n            var v = new THREE.Vector3();\n\n            return function panUp(distance) {\n\n                var te = this.object.matrix.elements;\n\n                // get Y column of matrix\n                v.set(te[4], te[5], te[6]);\n                v.multiplyScalar(distance);\n\n                panOffset.add(v);\n\n            };\n\n        }();\n\n        // pass in x,y of change desired in pixel space, right and down are positive\n        this.pan = function (deltaX, deltaY, screenWidth, screenHeight) {\n\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n\n                // perspective\n                var position = scope.object.position;\n                var offset = position\n                    .clone()\n                    .sub(scope.target);\n                var targetDistance = offset.length();\n\n                // half of the fov is center to top of screen\n                targetDistance *= Math.tan((scope.object.fov / 2) * Math.PI / 180.0);\n\n                // we actually don't use screenWidth, since perspective camera is fixed to\n                // screen height\n                scope.panLeft(2 * deltaX * targetDistance / screenHeight);\n                scope.panUp(2 * deltaY * targetDistance / screenHeight);\n\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n\n                // orthographic\n                scope.panLeft(deltaX * (scope.object.right - scope.object.left) / screenWidth);\n                scope.panUp(deltaY * (scope.object.top - scope.object.bottom) / screenHeight);\n\n            } else {\n\n                // camera neither orthographic or perspective\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n\n            }\n\n        };\n\n        this.dollyIn = function (dollyScale) {\n\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n\n                scale /= dollyScale;\n\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n\n                scope.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom * dollyScale));\n                scope\n                    .object\n                    .updateProjectionMatrix();\n                zoomChanged = true;\n\n            } else {\n\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabl' +\n                    'ed.');\n\n            }\n\n        };\n\n        this.dollyOut = function (dollyScale) {\n\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n\n                scale *= dollyScale;\n\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n\n                scope.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom / dollyScale));\n                scope\n                    .object\n                    .updateProjectionMatrix();\n                zoomChanged = true;\n\n            } else {\n\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabl' +\n                    'ed.');\n\n            }\n\n        };\n\n        this.reset = function () {\n\n            scope\n                .target\n                .copy(scope.target0);\n            scope\n                .object\n                .position\n                .copy(scope.position0);\n            scope.object.zoom = scope.zoom0;\n\n            scope\n                .object\n                .updateProjectionMatrix();\n            scope.dispatchEvent(changeEvent);\n\n            scope.update();\n\n            state = STATE.NONE;\n\n        };\n\n        this.forceUpdate = function () {\n\n            var offset = new THREE.Vector3();\n\n            // so camera.up is the orbit axis\n            var quat = new THREE\n                .Quaternion()\n                .setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n            var quatInverse = quat\n                .clone()\n                .inverse();\n\n            var lastPosition = new THREE.Vector3();\n            var lastQuaternion = new THREE.Quaternion();\n\n            return function () {\n\n                var position = this.object.position;\n\n                offset\n                    .copy(position)\n                    .sub(this.target);\n\n                // rotate offset to \"y-axis-is-up\" space\n                offset.applyQuaternion(quat);\n\n                // restrict theta to be between desired limits\n                theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, theta));\n\n                // restrict phi to be between desired limits\n                phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, phi));\n\n                // restrict phi to be betwee EPS and PI-EPS\n                phi = Math.max(EPS, Math.min(Math.PI - EPS, phi));\n\n                var radius = offset.length() * scale;\n\n                // restrict radius to be between desired limits\n                radius = Math.max(this.minDistance, Math.min(this.maxDistance, radius));\n\n                // move target to panned location\n                this\n                    .target\n                    .add(panOffset);\n\n                offset.x = radius * Math.sin(phi) * Math.sin(theta);\n                offset.y = radius * Math.cos(phi);\n                offset.z = radius * Math.sin(phi) * Math.cos(theta);\n\n                // rotate offset back to \"camera-up-vector-is-up\" space\n                offset.applyQuaternion(quatInverse);\n\n                position\n                    .copy(this.target)\n                    .add(offset);\n\n                this\n                    .object\n                    .lookAt(this.target);\n\n                if (this.enableDamping === true) {\n\n                    thetaDelta *= (1 - this.dampingFactor);\n                    phiDelta *= (1 - this.dampingFactor);\n\n                } else {\n\n                    thetaDelta = 0;\n                    phiDelta = 0;\n\n                }\n\n                scale = 1;\n                panOffset.set(0, 0, 0);\n\n                //new\n                if (scope.updateExternal && !scope.isExternallyControlled) {\n                    scope.updateExternal(phi, theta);\n                }\n\n                // update condition is: min(camera displacement, camera rotation in radians)^2 >\n                // EPS using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n                if (zoomChanged || lastPosition.distanceToSquared(this.object.position) > EPS || 8 * (1 - lastQuaternion.dot(this.object.quaternion)) > EPS) {\n\n                    lastPosition.copy(this.object.position);\n                    lastQuaternion.copy(this.object.quaternion);\n                    zoomChanged = false;\n\n                    return true;\n\n                }\n\n                return false;\n\n            };\n\n        }();\n\n        // this method is exposed, but perhaps it would be better if we can make it\n        // private...\n        this.update = function () {\n\n            var offset = new THREE.Vector3();\n\n            // so camera.up is the orbit axis\n            var quat = new THREE\n                .Quaternion()\n                .setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n            var quatInverse = quat\n                .clone()\n                .inverse();\n\n            var lastPosition = new THREE.Vector3();\n            var lastQuaternion = new THREE.Quaternion();\n\n            return function update() {\n\n                var position = scope.object.position;\n\n                offset\n                    .copy(position)\n                    .sub(scope.target);\n\n                // rotate offset to \"y-axis-is-up\" space\n                offset.applyQuaternion(quat);\n\n                // angle from z-axis around y-axis\n                spherical.setFromVector3(offset);\n\n                if (scope.autoRotate && state === STATE.NONE) {\n\n                    rotateLeft(getAutoRotationAngle());\n\n                }\n\n                spherical.theta += sphericalDelta.theta;\n                spherical.phi += sphericalDelta.phi;\n\n                // restrict theta to be between desired limits\n                spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta));\n\n                // restrict phi to be between desired limits\n                spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n\n                spherical.makeSafe();\n\n                spherical.radius *= scale;\n\n                // restrict radius to be between desired limits\n                spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n\n                // move target to panned location\n                scope\n                    .target\n                    .add(panOffset);\n\n                offset.setFromSpherical(spherical);\n\n                // rotate offset back to \"camera-up-vector-is-up\" space\n                offset.applyQuaternion(quatInverse);\n\n                position\n                    .copy(scope.target)\n                    .add(offset);\n\n                scope\n                    .object\n                    .lookAt(scope.target);\n\n                if (scope.enableDamping === true) {\n\n                    sphericalDelta.theta *= (1 - scope.dampingFactor);\n                    sphericalDelta.phi *= (1 - scope.dampingFactor);\n\n                } else {\n\n                    sphericalDelta.set(0, 0, 0);\n\n                }\n\n                scale = 1;\n                panOffset.set(0, 0, 0);\n\n                //new\n                if (scope.updateExternal && !scope.isExternallyControlled) {\n                    scope.updateExternal(spherical.phi, spherical.theta);\n                }\n\n                // update condition is: min(camera displacement, camera rotation in radians)^2 >\n                // EPS using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n                if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n\n                    scope.dispatchEvent(changeEvent);\n\n                    lastPosition.copy(scope.object.position);\n                    lastQuaternion.copy(scope.object.quaternion);\n                    zoomChanged = false;\n\n                    return true;\n\n                }\n\n                return false;\n\n            };\n\n        }();\n\n        this.dispose = function () {\n\n            scope\n                .domElement\n                .removeEventListener('contextmenu', onContextMenu, false);\n            scope\n                .domElement\n                .removeEventListener('mousedown', onMouseDown, false);\n            scope\n                .domElement\n                .removeEventListener('wheel', onMouseWheel, false);\n\n            scope\n                .domElement\n                .removeEventListener('touchstart', onTouchStart, false);\n            scope\n                .domElement\n                .removeEventListener('touchend', onTouchEnd, false);\n            scope\n                .domElement\n                .removeEventListener('touchmove', onTouchMove, false);\n\n            scope\n                .domElement\n                .removeEventListener('mousemove', onMouseMove, false);\n            scope\n                .domElement\n                .removeEventListener('mouseup', onMouseUp, false);\n\n            scope\n                .domElement\n                .removeEventListener('keydown', onKeyDown, false);\n\n\n            //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n        };\n\n        var rotateStart = new THREE.Vector2();\n        var rotateEnd = new THREE.Vector2();\n        var rotateDelta = new THREE.Vector2();\n\n        var panStart = new THREE.Vector2();\n        var panEnd = new THREE.Vector2();\n        var panDelta = new THREE.Vector2();\n\n        var dollyStart = new THREE.Vector2();\n        var dollyEnd = new THREE.Vector2();\n        var dollyDelta = new THREE.Vector2();\n\n        function getAutoRotationAngle() {\n\n            return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n        }\n\n        function getZoomScale() {\n\n            return Math.pow(0.95, scope.zoomSpeed);\n\n        }\n\n        function rotateLeft(angle) {\n\n            sphericalDelta.theta -= angle;\n            //new\n            if (scope.updateExternal && !scope.isExternallyControlled) {\n                scope.updateExternal(phi, theta);\n            }\n        }\n\n        function rotateUp(angle) {\n\n            sphericalDelta.phi -= angle;\n            //new\n            if (scope.updateExternal && !scope.isExternallyControlled) {\n                scope.updateExternal(phi, theta);\n            }\n        }\n\n        var panLeft = function () {\n\n            var v = new THREE.Vector3();\n\n            return function panLeft(distance, objectMatrix) {\n\n                v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n                v.multiplyScalar(-distance);\n\n                panOffset.add(v);\n\n            };\n\n        }();\n\n        var panUp = function () {\n\n            var v = new THREE.Vector3();\n\n            return function panUp(distance, objectMatrix) {\n\n                v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\n                v.multiplyScalar(distance);\n\n                panOffset.add(v);\n\n            };\n\n        }();\n\n        // deltaX and deltaY are in pixels; right and down are positive\n        var pan = function () {\n\n            var offset = new THREE.Vector3();\n\n            return function pan(deltaX, deltaY) {\n\n                var element = scope.domElement === document ?\n                    scope.domElement.body :\n                    scope.domElement;\n\n                if (scope.object instanceof THREE.PerspectiveCamera) {\n\n                    // perspective\n                    var position = scope.object.position;\n                    offset\n                        .copy(position)\n                        .sub(scope.target);\n                    var targetDistance = offset.length();\n\n                    // half of the fov is center to top of screen\n                    targetDistance *= Math.tan((scope.object.fov / 2) * Math.PI / 180.0);\n\n                    // we actually don't use screenWidth, since perspective camera is fixed to\n                    // screen height\n                    panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n                    panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n\n                } else if (scope.object instanceof THREE.OrthographicCamera) {\n\n                    // orthographic\n                    panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n                    panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n\n                } else {\n\n                    // camera neither orthographic nor perspective\n                    console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n                    scope.enablePan = false;\n\n                }\n\n            };\n\n        }();\n\n        function dollyIn(dollyScale) {\n\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n\n                scale /= dollyScale;\n\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n\n                scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n                scope\n                    .object\n                    .updateProjectionMatrix();\n                zoomChanged = true;\n\n            } else {\n\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabl' +\n                    'ed.');\n                scope.enableZoom = false;\n\n            }\n\n        }\n\n        function dollyOut(dollyScale) {\n\n            if (scope.object instanceof THREE.PerspectiveCamera) {\n\n                scale *= dollyScale;\n\n            } else if (scope.object instanceof THREE.OrthographicCamera) {\n\n                scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n                scope\n                    .object\n                    .updateProjectionMatrix();\n                zoomChanged = true;\n\n            } else {\n\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabl' +\n                    'ed.');\n                scope.enableZoom = false;\n\n            }\n\n        }\n\n        //\n        // event callbacks - update the object state\n        //\n\n        function handleMouseDownRotate(event) {\n\n            //console.log( 'handleMouseDownRotate' );\n\n            rotateStart.set(event.clientX, event.clientY);\n\n        }\n\n        function handleMouseDownDolly(event) {\n\n            //console.log( 'handleMouseDownDolly' );\n\n            dollyStart.set(event.clientX, event.clientY);\n\n        }\n\n        function handleMouseDownPan(event) {\n\n            //console.log( 'handleMouseDownPan' );\n\n            panStart.set(event.clientX, event.clientY);\n\n        }\n\n        function handleMouseMoveRotate(event) {\n\n            //console.log( 'handleMouseMoveRotate' );\n\n            rotateEnd.set(event.clientX, event.clientY);\n            rotateDelta.subVectors(rotateEnd, rotateStart);\n\n            var element = scope.domElement === document ?\n                scope.domElement.body :\n                scope.domElement;\n\n            // rotating across whole screen goes 360 degrees around\n            rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed);\n\n            // rotating up and down along whole screen attempts to go 360, but limited to\n            // 180\n            rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n\n            rotateStart.copy(rotateEnd);\n\n            scope.update();\n\n        }\n\n        function handleMouseMoveDolly(event) {\n\n            //console.log( 'handleMouseMoveDolly' );\n\n            dollyEnd.set(event.clientX, event.clientY);\n\n            dollyDelta.subVectors(dollyEnd, dollyStart);\n\n            if (dollyDelta.y > 0) {\n\n                dollyIn(getZoomScale());\n\n            } else if (dollyDelta.y < 0) {\n\n                dollyOut(getZoomScale());\n\n            }\n\n            dollyStart.copy(dollyEnd);\n\n            scope.update();\n\n        }\n\n        function handleMouseMovePan(event) {\n\n            //console.log( 'handleMouseMovePan' );\n\n            panEnd.set(event.clientX, event.clientY);\n\n            panDelta.subVectors(panEnd, panStart);\n\n            pan(panDelta.x, panDelta.y);\n\n            panStart.copy(panEnd);\n\n            scope.update();\n\n        }\n\n        function handleMouseUp(event) {\n\n            //console.log( 'handleMouseUp' );\n\n        }\n\n        function handleMouseWheel(event) {\n\n            //console.log( 'handleMouseWheel' );\n\n            if (event.deltaY < 0) {\n\n                dollyOut(getZoomScale());\n\n            } else if (event.deltaY > 0) {\n\n                dollyIn(getZoomScale());\n\n            }\n\n            scope.update();\n\n        }\n\n        function handleKeyDown(event) {\n\n            //console.log( 'handleKeyDown' );\n\n            switch (event.keyCode) {\n\n                case scope.keys.UP:\n                    pan(0, scope.keyPanSpeed);\n                    scope.update();\n                    break;\n\n                case scope.keys.BOTTOM:\n                    pan(0, -scope.keyPanSpeed);\n                    scope.update();\n                    break;\n\n                case scope.keys.LEFT:\n                    pan(scope.keyPanSpeed, 0);\n                    scope.update();\n                    break;\n\n                case scope.keys.RIGHT:\n                    pan(-scope.keyPanSpeed, 0);\n                    scope.update();\n                    break;\n\n            }\n\n        }\n\n        function handleTouchStartRotate(event) {\n\n            //console.log( 'handleTouchStartRotate' );\n\n            rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\n        }\n\n        function handleTouchStartDolly(event) {\n\n            //console.log( 'handleTouchStartDolly' );\n\n            var dx = event.touches[0].pageX - event.touches[1].pageX;\n            var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n            var distance = Math.sqrt(dx * dx + dy * dy);\n\n            dollyStart.set(0, distance);\n\n        }\n\n        function handleTouchStartPan(event) {\n\n            //console.log( 'handleTouchStartPan' );\n\n            panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\n        }\n\n        function handleTouchMoveRotate(event) {\n\n            //console.log( 'handleTouchMoveRotate' );\n\n            rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n            rotateDelta.subVectors(rotateEnd, rotateStart);\n\n            var element = scope.domElement === document ?\n                scope.domElement.body :\n                scope.domElement;\n\n            // rotating across whole screen goes 360 degrees around\n            rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed);\n\n            // rotating up and down along whole screen attempts to go 360, but limited to\n            // 180\n            rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n\n            rotateStart.copy(rotateEnd);\n\n            scope.update();\n\n        }\n\n        function handleTouchMoveDolly(event) {\n\n            //console.log( 'handleTouchMoveDolly' );\n\n            var dx = event.touches[0].pageX - event.touches[1].pageX;\n            var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n            var distance = Math.sqrt(dx * dx + dy * dy);\n\n            dollyEnd.set(0, distance);\n\n            dollyDelta.subVectors(dollyEnd, dollyStart);\n\n            if (dollyDelta.y > 0) {\n\n                dollyOut(getZoomScale());\n\n            } else if (dollyDelta.y < 0) {\n\n                dollyIn(getZoomScale());\n\n            }\n\n            dollyStart.copy(dollyEnd);\n\n            scope.update();\n\n        }\n\n        function handleTouchMovePan(event) {\n\n            //console.log( 'handleTouchMovePan' );\n\n            panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n            panDelta.subVectors(panEnd, panStart);\n\n            pan(panDelta.x, panDelta.y);\n\n            panStart.copy(panEnd);\n\n            scope.update();\n\n        }\n\n        function handleTouchEnd(event) {\n\n            //console.log( 'handleTouchEnd' );\n\n        }\n\n        //\n        // event handlers - FSM: listen for events and reset state\n        //\n\n        function onMouseDown(event) {\n\n            if (scope.enabled === false)\n                return;\n\n            event.preventDefault();\n\n            if (event.button === scope.mouseButtons.ORBIT) {\n\n                if (scope.enableRotate === false)\n                    return;\n\n                handleMouseDownRotate(event);\n\n                state = STATE.ROTATE;\n\n            } else if (event.button === scope.mouseButtons.ZOOM) {\n\n                if (scope.enableZoom === false)\n                    return;\n\n                handleMouseDownDolly(event);\n\n                state = STATE.DOLLY;\n\n            } else if (event.button === scope.mouseButtons.PAN) {\n\n                if (scope.enablePan === false)\n                    return;\n\n                handleMouseDownPan(event);\n\n                state = STATE.PAN;\n\n            }\n\n            if (state !== STATE.NONE) {\n\n                scope\n                    .domElement\n                    .addEventListener('mousemove', onMouseMove, false);\n                scope\n                    .domElement\n                    .addEventListener('mouseup', onMouseUp, false);\n\n                scope.dispatchEvent(startEvent);\n\n            }\n\n        }\n\n        function onMouseMove(event) {\n\n            if (scope.enabled === false)\n                return;\n\n            event.preventDefault();\n\n            if (state === STATE.ROTATE) {\n\n                if (scope.enableRotate === false)\n                    return;\n\n                handleMouseMoveRotate(event);\n\n            } else if (state === STATE.DOLLY) {\n\n                if (scope.enableZoom === false)\n                    return;\n\n                handleMouseMoveDolly(event);\n\n            } else if (state === STATE.PAN) {\n\n                if (scope.enablePan === false)\n                    return;\n\n                handleMouseMovePan(event);\n\n            }\n\n        }\n\n        function onMouseUp(event) {\n\n            if (scope.enabled === false)\n                return;\n\n            handleMouseUp(event);\n\n            document.removeEventListener('mousemove', onMouseMove, false);\n            document.removeEventListener('mouseup', onMouseUp, false);\n\n            scope.dispatchEvent(endEvent);\n\n            state = STATE.NONE;\n\n        }\n\n        function onMouseWheel(event) {\n\n            if (scope.enabled === false || scope.enableZoom === false || (state !== STATE.NONE && state !== STATE.ROTATE))\n                return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            handleMouseWheel(event);\n\n            scope.dispatchEvent(startEvent); // not sure why these are here...\n            scope.dispatchEvent(endEvent);\n\n        }\n\n        function onKeyDown(event) {\n\n            if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false)\n                return;\n\n            handleKeyDown(event);\n\n        }\n\n        function onTouchStart(event) {\n\n            if (scope.enabled === false)\n                return;\n\n            switch (event.touches.length) {\n\n                case 1: // one-fingered touch: rotate\n\n                    if (scope.enableRotate === false)\n                        return;\n\n                    handleTouchStartRotate(event);\n\n                    state = STATE.TOUCH_ROTATE;\n\n                    break;\n\n                case 2: // two-fingered touch: dolly\n\n                    if (scope.enableZoom === false)\n                        return;\n\n                    handleTouchStartDolly(event);\n\n                    state = STATE.TOUCH_DOLLY;\n\n                    break;\n\n                case 3: // three-fingered touch: pan\n\n                    if (scope.enablePan === false)\n                        return;\n\n                    handleTouchStartPan(event);\n\n                    state = STATE.TOUCH_PAN;\n\n                    break;\n\n                default:\n\n                    state = STATE.NONE;\n\n            }\n\n            if (state !== STATE.NONE) {\n\n                scope.dispatchEvent(startEvent);\n\n            }\n\n        }\n\n        function onTouchMove(event) {\n\n            if (scope.enabled === false)\n                return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            switch (event.touches.length) {\n\n                case 1: // one-fingered touch: rotate\n\n                    if (scope.enableRotate === false)\n                        return;\n                    if (state !== STATE.TOUCH_ROTATE)\n                        return; // is this needed?...\n\n                    handleTouchMoveRotate(event);\n\n                    break;\n\n                case 2: // two-fingered touch: dolly\n\n                    if (scope.enableZoom === false)\n                        return;\n                    if (state !== STATE.TOUCH_DOLLY)\n                        return; // is this needed?...\n\n                    handleTouchMoveDolly(event);\n\n                    break;\n\n                case 3: // three-fingered touch: pan\n\n                    if (scope.enablePan === false)\n                        return;\n                    if (state !== STATE.TOUCH_PAN)\n                        return; // is this needed?...\n\n                    handleTouchMovePan(event);\n\n                    break;\n\n                default:\n\n                    state = STATE.NONE;\n\n            }\n\n        }\n\n        function onTouchEnd(event) {\n\n            if (scope.enabled === false)\n                return;\n\n            handleTouchEnd(event);\n\n            scope.dispatchEvent(endEvent);\n\n            state = STATE.NONE;\n\n        }\n\n        function onContextMenu(event) {\n\n            event.preventDefault();\n\n        }\n\n        //\n\n        scope\n            .domElement\n            .addEventListener('contextmenu', onContextMenu, false);\n\n        scope\n            .domElement\n            .addEventListener('mousedown', onMouseDown, false);\n        scope\n            .domElement\n            .addEventListener('wheel', onMouseWheel, false);\n\n        scope\n            .domElement\n            .addEventListener('touchstart', onTouchStart, false);\n        scope\n            .domElement\n            .addEventListener('touchend', onTouchEnd, false);\n        scope\n            .domElement\n            .addEventListener('touchmove', onTouchMove, false);\n\n        scope\n            .domElement\n            .addEventListener('keydown', onKeyDown, false);\n\n\n\n        this.update();\n\n    };\n\n    OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\n    OrbitControls.prototype.constructor = OrbitControls;\n\n    Object.defineProperties(OrbitControls.prototype, {\n\n        center: {\n\n            get: function () {\n\n                console.warn('THREE.OrbitControls: .center has been renamed to .target');\n                return this.target;\n\n            }\n\n        },\n\n        // backward compatibility\n\n        noZoom: {\n\n            get: function () {\n\n                console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n                return !this.enableZoom;\n\n            },\n\n            set: function (value) {\n\n                console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n                this.enableZoom = !value;\n\n            }\n\n        },\n\n        noRotate: {\n\n            get: function () {\n\n                console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n                return !this.enableRotate;\n\n            },\n\n            set: function (value) {\n\n                console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n                this.enableRotate = !value;\n\n            }\n\n        },\n\n        noPan: {\n\n            get: function () {\n\n                console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n                return !this.enablePan;\n\n            },\n\n            set: function (value) {\n\n                console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n                this.enablePan = !value;\n\n            }\n\n        },\n\n        noKeys: {\n\n            get: function () {\n\n                console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n                return !this.enableKeys;\n\n            },\n\n            set: function (value) {\n\n                console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n                this.enableKeys = !value;\n\n            }\n\n        },\n\n        staticMoving: {\n\n            get: function () {\n\n                console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping inste' +\n                    'ad.');\n                return !this.enableDamping;\n\n            },\n\n            set: function (value) {\n\n                console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping inste' +\n                    'ad.');\n                this.enableDamping = !value;\n\n            }\n\n        },\n\n        dynamicDampingFactor: {\n\n            get: function () {\n\n                console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor ' +\n                    'instead.');\n                return this.dampingFactor;\n\n            },\n\n            set: function (value) {\n\n                console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor ' +\n                    'instead.');\n                this.dampingFactor = value;\n\n            }\n\n        }\n\n    });\n\n    return OrbitControls;\n};","/*implements the new version of view cube*/\n\nimport * as THREE from \"three\";\n\nvar OrbitControls = require('./utils/OrbitControls.js')(THREE);\n\nexport default class viewerHelper {\n    constructor(_canvas_id, _controls) {\n        this.canvas = document.getElementById(_canvas_id);\n        this.externalControls = _controls;\n\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.PerspectiveCamera(45, this.canvas.offsetWidth / this.canvas.offsetHeight, 0.1, 10000);\n        this.camera.position.set(0, 10, -30)\n        this.camera.lookAt(new THREE.Vector3());\n\n        var renderer = new THREE.WebGLRenderer({ canvas: this.canvas, antialias: false, alpha: true });\n        renderer.setSize(this.canvas.offsetWidth, this.canvas.offsetHeight);\n        renderer.setClearColor(0x000000, 0.0);\n        renderer.setPixelRatio(window.devicePixelRatio);\n\n        this.renderer = renderer;\n\n        this.controls = new OrbitControls(this.camera);\n        this.controls.enableZoom = false;\n        this.controls.enablePan = false;\n\n        var cubeScale = 12;\n        var geometry = new THREE.BoxGeometry(cubeScale, cubeScale, cubeScale);\n        var material = new THREE.MeshBasicMaterial({ color: 0x0000FF });\n        var cube = new THREE.Mesh(geometry, material);\n        cube.name = \"cube1\";\n        //this.scene.add(cube);\n\n        var geometry = new THREE.CylinderGeometry(0.25, 0.25, 10, 6);\n        var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n        var cylinder = new THREE.Mesh(geometry, material);\n        this.scene.add(cylinder);\n\n        var geometry = new THREE.CylinderGeometry(0.25, 0.25, 10, 6);\n        var material = new THREE.MeshBasicMaterial({ color: 0xFF0000 });\n        var cylinder = new THREE.Mesh(geometry, material);\n        this.scene.add(cylinder);\n\n        var geometry = new THREE.CylinderGeometry(0.25, 0.25, 10, 6);\n        var material = new THREE.MeshBasicMaterial({ color: 0x0000FF });\n        var cylinder = new THREE.Mesh(geometry, material);\n        this.scene.add(cylinder);\n\n        this.animate = this.animate.bind(this);\n        this.animate();\n    }\n\n    animate() {\n        requestAnimationFrame(this.animate);\n\n        // update the picking ray with the camera and mouse position\n        //raycaster.setFromCamera(mouse, camera);\n\n        // calculate objects intersecting the picking ray\n        //var intersects = raycaster.intersectObjects(interactiveObjects.children);\n        /*\n                // if there is one (or more) intersections\n                if (intersects.length) {\n                    if (intersects[0].object != INTERSECTED) {\n                        INTERSECTED = intersects[0].object;\n                        if (INTERSECTED) {\n                            //INTERSECTED.currentHex = INTERSECTED.material.color.getHex();\n                            //INTERSECTED.material.color.setHex(0xffff00);\n                        }\n                        else\n                            INTERSECTED = null;\n                    }\n                }\n                else {\n                    if (INTERSECTED)\n                        INTERSECTED = null;\n                }\n        \n                if (INTERSECTED_box) {\n                    INTERSECTED_box.update();\n                }\n        */\n        //console.log(\"angles\", this.externalControls.getAngles());\n        let { phi, theta } = this.externalControls.getAngles();\n        this.controls.setAngles(phi, theta);\n\n        this.renderer.render(this.scene, this.camera);\n    }\n}","import * as THREE from 'three';\n\nimport Sky from \"./sky\";\nimport ViewerHelper from \"./viewerHelper\";\n\nimport store, { toggleMenu, updateScene, updateSelectedObject } from \"../store\";\n\nvar OrbitControls = require('./utils/OrbitControls.js')(THREE);\n\nvar OBJLoader = require('three-obj-loader');\nOBJLoader(THREE);\n\nvar scene = new THREE.Scene();\nvar camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 10000);\ncamera.position.set(0, 10, -30)\ncamera.lookAt(new THREE.Vector3());\nvar canvas = document.getElementById(\"3d-env\");\nvar renderer = new THREE.WebGLRenderer({\n    canvas: canvas, antialias: true,\n    preserveDrawingBuffer: true,\n    failIfMajorPerformanceCaveat: true\n});\n\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.setClearColor(0x000000, 0.0);\nrenderer.setPixelRatio(window.devicePixelRatio);\n\n/* --- for ambiente occlusions\ncomposer = new THREE.EffectComposer( renderer );\n\t\t\t\trenderPass = new THREE.RenderPass( scene, camera );\n\t\t\t\tcomposer.addPass( renderPass );\n\t\t\t\tsaoPass = new THREE.SAOPass( scene, camera, false, true );\n\t\t\t\tsaoPass.renderToScreen = true;\n\t\t\t\tcomposer.addPass( saoPass );\n*/\n\nvar interactiveObjects = new THREE.Group();\nscene.add(interactiveObjects);\n\nvar geometry = new THREE.BoxGeometry(10, 10, 10);\nvar material = new THREE.MeshBasicMaterial({ color: 0x000000 });\nvar cube = new THREE.Mesh(geometry, material);\ncube.name = \"cube1\";\ninteractiveObjects.add(cube);\n\nvar geometry = new THREE.BoxGeometry(5, 5, 5);\nvar material = new THREE.MeshBasicMaterial({ color: 0x00ffFF });\nvar cube = new THREE.Mesh(geometry, material);\ncube.position.y = 7.5;\ncube.name = \"cube2\";\ninteractiveObjects.add(cube);\n\nvar geometry = new THREE.BoxGeometry(5, 5, 5);\nvar material = new THREE.MeshBasicMaterial({ color: 0x00ffFF });\nvar cube = new THREE.Mesh(geometry, material);\ncube.position.y = 15;\ncube.name = \"cube3\";\ninteractiveObjects.add(cube);\n\n//scene.add(cube);\n\nvar controls = new OrbitControls(camera);\nlet sky = new Sky();\nscene.add(sky.getObject(THREE));\n\n//cubeview\nlet viewerHelper = new ViewerHelper(\"viewer-helper\", controls);\n\nvar gridHelper = new THREE.GridHelper(100, 100, 0xaaaaaa, 0x666666);\nscene.add(gridHelper);\n\n//raycast\nvar raycaster = new THREE.Raycaster();\nvar mouse = new THREE.Vector2();\nvar INTERSECTED;\nvar INTERSECTED_box;\nvar INTERSECTED_selected;\n\nfunction onMouseMove(event) {\n    mouse.x = (event.clientX / renderer.domElement.clientWidth) * 2 - 1;\n    mouse.y = - (event.clientY / renderer.domElement.clientHeight) * 2 + 1;\n}\n\nfunction onMouseDown(event) {\n    if (INTERSECTED && event.button == 2) {\n        console.log(event);\n        console.log(INTERSECTED.name);\n    }\n    if (INTERSECTED && event.button == 0) {\n        updateSelectedObject(INTERSECTED);\n        console.log(store.getState().environment);\n        console.log(INTERSECTED.name);\n\n        INTERSECTED_selected = INTERSECTED;\n\n        if (INTERSECTED_box)\n            scene.remove(INTERSECTED_box)\n        INTERSECTED_box = new THREE.BoxHelper(INTERSECTED, 0x55ddff);\n\n        scene.add(INTERSECTED_box);\n    }\n}\n\nwindow.addEventListener('mousemove', onMouseMove, false);\nwindow.addEventListener('mousedown', onMouseDown, false);\n\nfunction animate() {\n    requestAnimationFrame(animate);\n    // update the picking ray with the camera and mouse position\n    raycaster.setFromCamera(mouse, camera);\n\n    // calculate objects intersecting the picking ray\n    var intersects = raycaster.intersectObjects(interactiveObjects.children);\n\n    // if there is one (or more) intersections\n    if (intersects.length) {\n        if (intersects[0].object != INTERSECTED) {\n            INTERSECTED = intersects[0].object;\n            if (INTERSECTED) {\n                //INTERSECTED.currentHex = INTERSECTED.material.color.getHex();\n                //INTERSECTED.material.color.setHex(0xffff00);\n            }\n            else\n                INTERSECTED = null;\n        }\n    }\n    else {\n        if (INTERSECTED)\n            INTERSECTED = null;\n    }\n\n    if (INTERSECTED_box) {\n        INTERSECTED_box.update();\n    }\n\n    renderer.render(scene, camera);\n}\n\n//load obj\n// instantiate a loader\nvar loader = new THREE.OBJLoader();\n/*\n// load a resource\nloader.load(\n    // resource URL\n    'models/monster.obj',\n    // called when resource is loaded\n    function (object) {\n\n        scene.add(object);\n\n    },\n    // called when loading is in progresses\n    function (xhr) {\n\n        console.log((xhr.loaded / xhr.total * 100) + '% loaded');\n\n    },\n    // called when loading has errors\n    function (error) {\n\n        console.log('An error happened');\n\n    }\n);\n*/\nanimate();\n","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App.js\";\nimport \"./index.css\";\n\n\n//export let actions = new Actions(store);\nimport store from \"./store\";\n\nconst render = () => {\n    ReactDOM.render(\n        <AppContainer>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </AppContainer>,\n        window.document.getElementById('app'));\n}\nif (typeof window !== 'undefined') { render(); }\n\nif (module.hot) {\n    module.hot.accept(render);\n}\n\nwindow.focus();\n\n//execute the viewer\nimport './viewer/viewer.js';\n//let viewer = new Viewer(store);\n\n//Menu\nconst { remote } = require('electron');\nconst { Menu, MenuItem } = remote;\n\nconst menu = new Menu()\nmenu.append(new MenuItem({ label: 'MenuItem1', click() { console.log('item 1 clicked') } }))\nmenu.append(new MenuItem({ type: 'separator' }))\nmenu.append(new MenuItem({ label: 'MenuItem2', type: 'checkbox', checked: true }))\n\nwindow.addEventListener('contextmenu', (e) => {\n    e.preventDefault()\n    menu.popup({ window: remote.getCurrentWindow() })\n}, false);\n\n\n\n"]}